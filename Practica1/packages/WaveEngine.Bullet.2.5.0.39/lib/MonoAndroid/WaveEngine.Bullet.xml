<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WaveEngine.Bullet</name>
    </assembly>
    <members>
        <member name="T:WaveEngine.Bullet.BulletPhysicAction3D">
            <summary>
            The BulletCollisionObject3D implements Bullet collision object for Wave
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicAction3D.Simulation3D">
            <summary>
            The simulation 3D
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicAction3D.action">
            <summary>
            The internal physic action
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicAction3D.UserData">
            <summary>
            Gets or sets the user data
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicAction3D.InternalController">
            <summary>
            Gets the internal body
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicAction3D.#ctor(WaveEngine.Bullet.BulletSimulation3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletPhysicAction3D" /> class.
            </summary>
            <param name="simulation3D">The bullet world</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicAction3D.DestroyAction">
            <summary>
            Destroy Bullet body
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicAction3D.Dispose">
            <summary>
            Dispose this instance
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletCharacterController3D">
            <summary>
            The BulletCollisionObject3D implements Bullet collision object for Wave
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletCharacterController3D.characterController">
            <summary>
            The character controller
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCharacterController3D.StepHeight">
            <summary>
            Gets or sets the fall speed
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCharacterController3D.FallSpeed">
            <summary>
            Gets or sets the fall speed
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCharacterController3D.JumpSpeed">
            <summary>
            Gets or sets the jump speed
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCharacterController3D.MaxSlope">
            <summary>
            Gets or sets the max slope
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCharacterController3D.Gravity">
            <summary>
            Gets or sets the character gravity
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCharacterController3D.OnGround">
            <summary>
            Gets a value indicating whether this character is on the ground.
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCharacterController3D.#ctor(WaveEngine.Bullet.BulletSimulation3D,WaveEngine.Bullet.BulletGhostBody3D,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletCharacterController3D" /> class.
            </summary>
            <param name="simulation3D">The bullet world</param>
            <param name="ghostBody">The definition of static body</param>
            <param name="stepHeigh">The step heigh</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCharacterController3D.Jump">
            <summary>
            Jumps this character.
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCharacterController3D.Jump(WaveEngine.Common.Math.Vector3)">
            <summary>
            Jumps this character.
            </summary>
            <param name="jumpDirection">The direction</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCharacterController3D.Teleport(WaveEngine.Common.Math.Vector3)">
            <summary>
            Teleports the specified character
            </summary>
            <param name="newPosition">The new position</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCharacterController3D.SetVelocity(WaveEngine.Common.Math.Vector3)">
            <summary>
            Sets the character velocity.
            </summary>
            <param name="velocity">The velociy vector</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCharacterController3D.Dispose">
            <summary>
            Dispose this instance
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletPhysicBody3D">
            <summary>
            The BulletPhysicBody3D implements Bullet physic object for Wave
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicBody3D.EmptyCollider">
            <summary>
            The empty shape
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicBody3D.Simulation3D">
            <summary>
            The simulation 3D
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicBody3D.physicBody">
            <summary>
            The Bullet rigid body instance
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicBody3D.bodyDef">
            <summary>
            Rigid body definition
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicBody3D.colliders">
            <summary>
            Colliders set
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicBody3D.collider">
            <summary>
            The single collider
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicBody3D.userData">
            <summary>
            The user data
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicBody3D.collisionStore">
            <summary>
            The collision store
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicBody3D.ToWaveWorld">
            <summary>
            Transform applied to transform from Bullet world to Wave
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicBody3D.ToBulletWorld">
            <summary>
            Transform applied to transform from Wave world to Bullet
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicBody3D.hasOffset">
            <summary>
            This body has an offset applied
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicBody3D.collisionCategories">
            <summary>
            The collision flags
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletPhysicBody3D.maskBits">
            <summary>
            The mask bits
            </summary>
        </member>
        <member name="E:WaveEngine.Bullet.BulletPhysicBody3D.OnColliderCollectionChanged">
            <summary>
            fired when a collider is added or removed
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.Collider">
            <summary>
            Gets or sets the associated collider
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.CompoundCollider">
            <summary>
            Gets or sets the compound collider
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.InternalBody">
            <summary>
            Gets the internal body
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.UserData">
            <summary>
            Gets or sets the user data
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.IsSensor">
            <summary>
            Gets or sets a value indicating whether this body collects contact information but never generates a collision response.
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.Friction">
            <summary>
            Gets or sets the friction of the rigid body
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.Restitution">
            <summary>
            Gets or sets the restitution of the rigid body
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.Flags">
            <summary>
            Gets or sets the rigid body flags
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.Transform">
            <summary>
            Gets the wolrd transform of the body.
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.ColliderShapes">
            <summary>
            Gets the colliders enumerable
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.AnisotropicFriction">
            <summary>
            Gets or sets the anisotropic friction
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.CcdMotionThreshold">
            <summary>
            Gets or sets the CCD motion threshold
            </summary>
            <remarks>
            CCD motion clamping activates for convex objects that exceed a (squared to avoid taking square roots)
            velocity threshold. By default this threshold is zero, which means this feature is disabled for rigid bodies.
            </remarks>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.CcdSweptSphereRadius">
            <summary>
            Gets or sets the CCD swept shere radius
            </summary>
            <remarks>
            CCD works on an embedded sphere of radius, make sure this radius is embedded inside the convex objects, preferably smaller
            </remarks>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.CompanionId">
            <summary>
            Gets or sets the Companion ID
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.ContactDamping">
            <summary>
            Gets the contact damping
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.ContactProcessingThreshold">
            <summary>
            Gets or sets the contact processing threshold
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.ContactStiffness">
            <summary>
            Gets the contact stiffness
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.DeactivationTime">
            <summary>
            Gets or sets the deactivation time
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.HasContactResponse">
            <summary>
            Gets a value indicating whether has contact response
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.HitFraction">
            <summary>
            Gets or sets the hit fraction
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.InterpolationAngularVelocity">
            <summary>
            Gets or sets the angular velocity interpolated
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.InterpolationLinearVelocity">
            <summary>
            Gets or sets the linear velocity interpolated
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.InterpolationWorldTransform">
            <summary>
            Gets or sets the world transform interpolated
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.IsActive">
            <summary>
            Gets a value indicating whether this body is active
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.IslandTag">
            <summary>
            Gets or sets the island tag
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.IsKinematicObject">
            <summary>
            Gets a value indicating whether this body is kinematic
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.IsStaticObject">
            <summary>
            Gets a value indicating whether this body is static
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.IsStaticOrKinematicObject">
            <summary>
            Gets a value indicating whether this body is kinematic or kinematic
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.RollingFriction">
            <summary>
            Gets or sets the rolling friction
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.SpinningFriction">
            <summary>
            Gets or sets the spinning fraction
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.CollisionCategories">
            <summary>
            Gets or sets the collision category bits.
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPhysicBody3D.MaskBits">
            <summary>
            Gets or sets the collision mask bits.
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.#ctor(WaveEngine.Bullet.BulletSimulation3D,WaveEngine.Common.Physics3D.PhysicBodyDef3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletPhysicBody3D" /> class.
            </summary>
            <param name="simulation3D">The bullet world</param>
            <param name="bodyDef">The definition of static body</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.AddColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)">
            <summary>
            Add collider shape to the body
            </summary>
            <param name="shape">The shape</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.RemoveColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)">
            <summary>
            Remove collider shape to the body
            </summary>
            <param name="shape">The shape to remove</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.GetColliderShapeByIndex(System.Int32)">
            <summary>
            Gets collider shape by index
            </summary>
            <param name="index">The index</param>
            <returns>The collider shape</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.GetConvexCollider">
            <summary>
            Gets collider shape by index
            </summary>
            <returns>The collider shape</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.SetTransform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)">
            <summary>
            Set the position of the body's origin and rotation. This breaks any contacts and wakes the other bodies. Manipulating a body's transform may cause non-physical behavior.
            </summary>
            <param name="position">the world position of the body's local origin.</param>
            <param name="orientation">the world rotation as a quaternion.</param>
            <param name="scale">the world scale</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.Collider_OnOffsetTransformChanged(System.Object,System.EventArgs)">
            <summary>
            The offset transform of the collider has changed
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The args</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.Collider_OnShapeInstanceChanged(System.Object,System.EventArgs)">
            <summary>
            The collider instance is changed
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The args</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.SetBodyOffset(WaveEngine.Common.Math.Matrix)">
            <summary>
            Refresh the body offset
            </summary>
            <param name="offset">The offset</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.ResetBodyOffset">
            <summary>
            Refresh the body offset
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.RefreshDebugDrawFlag">
            <summary>
            Refresh the debug draw flags
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.BaseInstantiateCollisionObject(WaveEngine.Common.Physics3D.PhysicBodyDef3D)">
            <summary>
            Base method of physic body instantiation
            </summary>
            <param name="bodyDef">The body definition</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.InstantiateCollisionObject(WaveEngine.Common.Physics3D.PhysicBodyDef3D)">
            <summary>
            Create the rigid body
            </summary>
            <param name="bodyDef">The body definition</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.AddToWorld">
            <summary>
            Add this body to the world simulation
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.BaseAddToWorld">
            <summary>
            Add this body to the world simulation
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.RemoveFromWorld">
            <summary>
            Destroy Bullet body
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.BaseRemoveFromWorld">
            <summary>
            Remove physic body from simulation world
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.RegenerateBody">
            <summary>
            Regenerate body
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.ContactTest(WaveEngine.Common.Physics3D.ICollisionInfoStore3D)">
            <summary>
            Contact test
            </summary>
            <param name="store">Collision store</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.ContactPairTest(WaveEngine.Common.Physics3D.IPhysicBody3D,WaveEngine.Common.Physics3D.ICollisionInfoStore3D)">
            <summary>
            Contact test
            </summary>
            <param name="otherBody">The other physic body</param>
            <param name="store">The collision store</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.ProcessContacts(System.Boolean)">
            <summary>
            Process contacts
            </summary>
            <param name="fireCollisionEvents">Fire collision events</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPhysicBody3D.ProcessContacts(WaveEngine.Common.Physics3D.ICollisionInfoStore3D,System.Boolean)">
            <summary>
            Process contacts
            </summary>
            <param name="store">The collision store</param>
            <param name="fireCollisionEvents">Fire collision events</param>
        </member>
        <member name="T:WaveEngine.Bullet.BulletGhostBody3D">
            <summary>
            The BulletGhostBody3D implements Bullet ghost object for Wave
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletGhostBody3D.Body">
            <summary>
            The Bullet rigid body instance
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletGhostBody3D.#ctor(WaveEngine.Bullet.BulletSimulation3D,WaveEngine.Common.Physics3D.GhostBodyDef3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletGhostBody3D" /> class.
            </summary>
            <param name="simulation3D">The bullet world</param>
            <param name="bodyDef">The definition of static body</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletGhostBody3D.InstantiateCollisionObject(WaveEngine.Common.Physics3D.PhysicBodyDef3D)">
            <summary>
            Create the rigid body
            </summary>
            <param name="bodyDef">The body definition</param>
        </member>
        <member name="T:WaveEngine.Bullet.BulletStaticBody3D">
            <summary>
            The BulletCollisionObject3D implements Bullet collision object for Wave
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletStaticBody3D.#ctor(WaveEngine.Bullet.BulletSimulation3D,WaveEngine.Common.Physics3D.StaticBodyDef3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletStaticBody3D" /> class.
            </summary>
            <param name="simulation3D">The bullet world</param>
            <param name="bodyDef">The definition of static body</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletStaticBody3D.InstantiateCollisionObject(WaveEngine.Common.Physics3D.PhysicBodyDef3D)">
            <summary>
            Create the rigid body
            </summary>
            <param name="bodyDef">The body definition</param>
        </member>
        <member name="T:WaveEngine.Bullet.BulletRigidBody3D">
            <summary>
            The Bullet3DRigidBody implements Bullet rigid body for Wave
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletRigidBody3D.mass">
            <summary>
            Gets the mass
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletRigidBody3D.type">
            <summary>
            The rigid body type
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletRigidBody3D.Body">
            <summary>
            The Bullet rigid body instance
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.ActivationState">
            <summary>
            Gets or sets the activation state
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.Type">
            <summary>
            Gets or sets the rigid
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.Mass">
            <summary>
            Gets or sets the rigid body mass
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.RigidBodyFlags">
            <summary>
            Gets or sets the rigid body flags
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.Gravity">
            <summary>
            Gets or sets the gravity applied to that rigid body
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.LinearDamping">
            <summary>
            Gets the Linear damping is use to reduce the linear velocity.
            <remarks>The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.</remarks>
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.AngularDamping">
            <summary>
            Gets the Angular damping is use to reduce the angular velocity.
            <remarks>The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.</remarks>
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.LinearSleepingThreshold">
            <summary>
            Gets the sleeping threshold for linear velocity
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.AngularSleepingThreshold">
            <summary>
            Gets the sleeping threshold for angular velocity
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.LinearFactor">
            <summary>
            Gets or sets the linear factor
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.LinearVelocity">
            <summary>
            Gets or sets the linear velocity
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.AngularVelocity">
            <summary>
            Gets or sets the angular velocity
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.InvMass">
            <summary>
            Gets the inverse of the mass
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.InvInertiaTensorWorld">
            <summary>
            Gets the Inverse vector of the inertia tensor of the world
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.CenterOfMassTransform">
            <summary>
            Gets or sets the center of mass transformation
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.CenterOfMassPosition">
            <summary>
            Gets the center of mass position
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.TotalForce">
            <summary>
            Gets the total force applied to the rigid body
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.TotalTorque">
            <summary>
            Gets the total torque applied to the rigid body
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.InvInertiaDiagLocal">
            <summary>
            Gets or sets the InvInertiaDiagLocal vector of the rigid body
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.Orientation">
            <summary>
            Gets the orientation
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.Aabb">
            <summary>
            Gets the bounding box
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.AngularFactor">
            <summary>
            Gets or sets the angular factor
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.LocalInertia">
            <summary>
            Gets the local inertia
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletRigidBody3D.IsInWorld">
            <summary>
            Gets a value indicating whether this body is in the world
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.#ctor(WaveEngine.Bullet.BulletSimulation3D,WaveEngine.Common.Physics3D.RigidBodyDef3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletRigidBody3D" /> class.
            </summary>
            <param name="simulation3D">The bullet world</param>
            <param name="rigidBodyDef">The definition of Rigid body</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.AddColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)">
            <summary>
            Add collider shape to the body
            </summary>
            <param name="shape">The shape</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.RemoveColliderShape(WaveEngine.Common.Physics3D.IColliderShape3D)">
            <summary>
            Remove collider shape to the body
            </summary>
            <param name="shape">The shape to remove</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.SetTransform(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Quaternion,WaveEngine.Common.Math.Vector3)">
            <summary>
            Set the position of the body's origin and rotation. This breaks any contacts and wakes the other bodies. Manipulating a body's transform may cause non-physical behavior.
            </summary>
            <param name="position">the world position of the body's local origin.</param>
            <param name="orientation">the world rotation as a quaternion.</param>
            <param name="scale">the world scale</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ResetMassProperty(System.Single,WaveEngine.Common.Math.Vector3)">
            <summary>
            Reset the mass property
            </summary>
            <param name="mass">The mass</param>
            <param name="inertia">The inertia</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.WakeUp">
            <summary>
            Wake up the rigid body
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ApplyGravity">
            <summary>
            Apply the gravity
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ApplyDamping(System.Single)">
            <summary>
            Apply the damping
            </summary>
            <param name="step">Delta time.</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.IntegrateVelocities(System.Single)">
            <summary>
            Integrate velocities
            </summary>
            <param name="step">Delta time.</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ApplyCentralForce(WaveEngine.Common.Math.Vector3)">
            <summary>
            Apply a central force to the rigid body
            </summary>
            <param name="force">The force</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ApplyTorque(WaveEngine.Common.Math.Vector3)">
            <summary>
            Apply a torque force to the rigid body
            </summary>
            <param name="torque">The torque</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ApplyForce(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)">
            <summary>
            Apply a force to the rigid body
            </summary>
            <param name="force">The force vector</param>
            <param name="relativePosition">Relative poosition of the point where the force will be applied</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ApplyCentralImpulse(WaveEngine.Common.Math.Vector3)">
            <summary>
            Apply an impulse to the center of the rigid body
            </summary>
            <param name="impulse">The impulse</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ApplyTorqueImpulse(WaveEngine.Common.Math.Vector3)">
            <summary>
            Apply torque impulse to the rigid body
            </summary>
            <param name="torque">Torque impulse</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ApplyImpulse(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)">
            <summary>
            Apply an impulse to the rigid body
            </summary>
            <param name="impulse">The impulse</param>
            <param name="relativePosition">Relative poosition of the point where the force will be applied</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ClearForces">
            <summary>
            Clear all forces applied to the rigid body
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.UpdateInertiaTensor">
            <summary>
            Update the inertia tensor
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.GetVelocityInLocalPoint(WaveEngine.Common.Math.Vector3)">
            <summary>
            Gets the velocity in a local point of the rigid body
            </summary>
            <param name="relativePosition">The relative position</param>
            <returns>The velocity in the specified point</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ComputeImpulseDenominator(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)">
            <summary>
            Compute impulse dominator
            </summary>
            <param name="pos">The position</param>
            <param name="normal">The normal</param>
            <returns>The impulse denominator</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ComputeAngularImpulseDenominator(WaveEngine.Common.Math.Vector3)">
            <summary>
            Compute the angular impulse denominator
            </summary>
            <param name="axis">The axis</param>
            <returns>The angular impulse denominator</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.UpdateDeactivation(System.Single)">
            <summary>
            Update the deactivation
            </summary>
            <param name="step">The time step</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.WantsSleeping">
            <summary>
            Return if the entity need to sleep
            </summary>
            <returns>The rigid body need to sleep</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ComputeGyroscopicImpulseImplicit_World(System.Single)">
            <summary>
            Compute the gyrocsopic impulse implicit by world
            </summary>
            <param name="step">The step</param>
            <returns>The Gyroscopic impulse</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ComputeGyroscopicImpulseImplicit_Body(System.Single)">
            <summary>
            Compute the gyrocsopic impulse implicit by Body
            </summary>
            <param name="step">The step</param>
            <returns>The Gyroscopic impulse</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.ComputeGyroscopicForceExplicit(System.Single)">
            <summary>
            Compute the gyrocsopic forces explicit
            </summary>
            <param name="step">The step</param>
            <returns>The Gyroscopic impulse</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.SetDamping(System.Single,System.Single)">
            <summary>
            Set Damping values
            </summary>
            <param name="linearDamping">Linear damping value</param>
            <param name="angularDamping">Angular damping value</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.SetSleepingThresholds(System.Single,System.Single)">
            <summary>
            Set sleeping threshold values
            </summary>
            <param name="linear">Linear threshold value</param>
            <param name="angular">Angular threshold value</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.RefreshDebugDrawFlag">
            <summary>
            Refresh the debug draw flags
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.InstantiateCollisionObject(WaveEngine.Common.Physics3D.PhysicBodyDef3D)">
            <summary>
            Create the rigid body
            </summary>
            <param name="bodyDef">The body definition</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.BaseAddToWorld">
            <inheritdoc />
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.BaseRemoveFromWorld">
            <inheritdoc />
        </member>
        <member name="M:WaveEngine.Bullet.BulletRigidBody3D.RefreshMassProps">
            <summary>
            Refresh the mass properties
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletDebugDraw3D">
            <summary>
            Bullet debug draw instance
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletDebugDraw3D.simulation">
            <summary>
            The simulation instance
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletDebugDraw3D.auxColor">
            <summary>
            Auxiliar color
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletDebugDraw3D.ImplementationInstance">
            <summary>
            the debug draw instance
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletDebugDraw3D.IsActive">
            <summary>
            Gets a value indicating whether this debug draw is active
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletDebugDraw3D.DebugMode">
            <summary>
            Gets or sets the debug draw modes
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletDebugDraw3D.#ctor(WaveEngine.Bullet.BulletSimulation3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletDebugDraw3D" /> class.
            </summary>
            <param name="simulation">The 3D simulation</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletDebugDraw3D.Draw3dText(WaveEngine.Common.Math.Vector3@,System.String)">
            <summary>
            Draw a 3D text
            </summary>
            <param name="location">The text position</param>
            <param name="textString">The text string</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletDebugDraw3D.DrawLine(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@)">
            <summary>
            Draw a line
            </summary>
            <param name="from">Start position</param>
            <param name="to">End position</param>
            <param name="color">Line color</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletDebugDraw3D.ReportErrorWarning(System.String)">
            <summary>
            Report warning string
            </summary>
            <param name="warningString">The warning string</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletDebugDraw3D.DrawSphere(System.Single,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Vector3@)">
            <summary>
            Draw the phere
            </summary>
            <param name="radius">The radius</param>
            <param name="transform">The transform</param>
            <param name="color">The color</param>
        </member>
        <member name="T:WaveEngine.Bullet.BulletSimulation3D">
            <summary>
            The Simulation3D class manages all 3D physics entities.
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletSimulation3D.gravity">
            <summary>
            The global gravity vector
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletSimulation3D.discreteDynamicsWorld">
            <summary>
            The dynamics world. Used when the game requires rigid bodies.
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletSimulation3D.dispatcher">
            <summary>
            Collision dispatcher
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletSimulation3D.collisionConfiguration">
            <summary>
            Collision configuration
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletSimulation3D.broadphase">
            <summary>
            The broadphase
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletSimulation3D.bodiesToBeInitialized">
            <summary>
            The list of bodies to be initialized
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletSimulation3D.bodiesToBeRemoved">
            <summary>
            The list of bodies to be removed
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletSimulation3D.applySpeculativeContactRestitution">
            <summary>
            A value indicating whether you want to apply the speculative contact restitution.
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletSimulation3D.bulletDebugDraw">
            <summary>
            The debug draw instance
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletSimulation3D.drawFlags">
            <summary>
            The draw flags
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletSimulation3D.debugDraw">
            <summary>
            The debug draw instance
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletSimulation3D.physicBodyList">
            <summary>
            Rigid body list
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSimulation3D.IsLocked">
            <summary>
            Gets a value indicating whether the simulation is under a step phase
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSimulation3D.Gravity">
            <summary>
            Gets or sets the global gravity vector
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSimulation3D.ApplySpeculativeContactRestitution">
            <summary>
            Gets or sets a value indicating whether you want to apply the speculative contact restitution.
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSimulation3D.WorldScale">
            <summary>
            Gets or sets the world scale
            <remarks>
            By default, the scale of the world is 1unit = 1meter.
            </remarks>
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSimulation3D.MaxSubSteps">
            <summary>
            Gets or sets the maximum number of substepts that Physics3D is allowed to perform every step.
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSimulation3D.FixedTimeStep">
            <summary>
            Gets or sets the resolution of physics simulation. Default value of 1/60, or 60fps.
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSimulation3D.InternalWorld">
            <summary>
            Gets the internal native world instance.
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSimulation3D.World">
            <summary>
            Gets the bullet world instance.
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSimulation3D.DrawFlags">
            <summary>
            Gets or sets the debug draw flags
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSimulation3D.State">
            <summary>
            Gets or sets the execution state
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSimulation3D.DebugDrawInstance">
            <summary>
            Gets or sets the debug draw instance
            </summary>
        </member>
        <member name="E:WaveEngine.Bullet.BulletSimulation3D.OnPhysicStep">
            <summary>
            Event fired when the physics will do an step
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletSimulation3D" /> class.
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.Initialize">
            <summary>
            Initialize the bullet simulation
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.CreateColliderShape``1(System.Object[])">
            <summary>
            Instantiate a new Collider shape
            </summary>
            <typeparam name="T">The ColliderShape type</typeparam>
            <param name="param">Collider parameters</param>
            <returns>The new collider shape</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.CreateJoint``2(``1)">
            <summary>
            Creates a Joint
            </summary>
            <typeparam name="T">The Joint type</typeparam>
            <typeparam name="J">The Joint definition type</typeparam>
            <param name="jointDef">The joint definition instance</param>
            <returns>The new joint instance</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.RemoveJoint(WaveEngine.Common.Physics3D.IJoint3D)">
            <summary>
            Removes a Joint 3D from the world
            </summary>
            <param name="joint"> The joint to remove</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.RegisterBreakableJoint(WaveEngine.Bullet.BulletJoint3D)">
            <summary>
            Register a breakable joint
            </summary>
            <param name="joint">The breakable joint</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.UnregisterBreakableJoint(WaveEngine.Bullet.BulletJoint3D)">
            <summary>
            Unregister a breakable joint
            </summary>
            <param name="joint">The breakable joint</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.CreatePhysicBody``2(``1)">
            <summary>
            Creates a StaticBody 3D
            </summary>
            <param name="bodyDef"> Body definition</param>
            <returns>The static body instance</returns>
            <typeparam name="T">The physic body interface</typeparam>
            <typeparam name="J">The body definition class</typeparam>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.AddPhysicBody(WaveEngine.Common.Physics3D.IPhysicBody3D)">
            <summary>
            Add the physic body to the simulation world
            </summary>
            <param name="body">The body</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.RemovePhysicBody(WaveEngine.Common.Physics3D.IPhysicBody3D)">
            <summary>
            Removes a RigidBody 3D from the world
            </summary>
            <param name="body"> The body to remove</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.CreatePhysicAction``1(System.Object[])">
            <summary>
            Create a physic action instance (character, vehicle controllers...)
            </summary>
            <typeparam name="T">The type of the physic action</typeparam>
            <param name="param">The initialization parameters</param>
            <returns>The created instance</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.RemovePhysicAction(WaveEngine.Common.Physics3D.IPhysicAction3D)">
            <summary>
            Remvoe the physic action
            </summary>
            <param name="physicAction">The physic action to remove</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.Pause">
            <summary>
            Pause the world
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.Resume">
            <summary>
            Resule the world
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.RayCast(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Physics3D.CollisionCategory3D)">
            <summary>
            Raycast and stop at the first hit
            </summary>
            <param name="from">The start ray position</param>
            <param name="to">The ray ending</param>
            <param name="filterMask">The collision category to hit the ray</param>
            <returns>The closest hit result</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.RayCastAll(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,System.Collections.Generic.IList{WaveEngine.Common.Physics3D.HitResult3D},WaveEngine.Common.Physics3D.CollisionCategory3D)">
            <summary>
            Raycast and gets all the hits
            </summary>
            <param name="from">The start ray position</param>
            <param name="to">The ray ending</param>
            <param name="resultsOutput">The hit array result</param>
            <param name="filterMask">The collision category to hit the ray</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.RayCast(WaveEngine.Common.Math.Ray@,System.Single,WaveEngine.Common.Physics3D.CollisionCategory3D)">
            <summary>
            Raycast and stop at the first hit
            </summary>
            <param name="ray">The ray</param>
            <param name="rayDistance">The distance</param>
            <param name="filterMask">The collision category to hit the ray</param>
            <returns>The closest hit result</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.RayCastAll(WaveEngine.Common.Math.Ray@,System.Single,System.Collections.Generic.IList{WaveEngine.Common.Physics3D.HitResult3D},WaveEngine.Common.Physics3D.CollisionCategory3D)">
            <summary>
            Raycast and gets all the hits
            </summary>
            <param name="ray">The ray</param>
            <param name="rayDistance">The distance</param>
            <param name="resultsOutput">The hit array result</param>
            <param name="filterMask">The collision category to hit the ray</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.ConvexSweepTest(WaveEngine.Common.Physics3D.IColliderShape3D,WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix,WaveEngine.Common.Physics3D.CollisionCategory3D)">
            <summary>
            Sweep test using a collider shape and stops at the first hit
            </summary>
            <param name="colliderShape">The collider shape</param>
            <param name="from">The from matris</param>
            <param name="to">The to matris</param>
            <param name="filterMask">The collision category to hit the ray</param>
            <returns>The hit result</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.ConvexSweepTestAll(WaveEngine.Common.Physics3D.IColliderShape3D,WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix,System.Collections.Generic.IList{WaveEngine.Common.Physics3D.HitResult3D},WaveEngine.Common.Physics3D.CollisionCategory3D)">
            <summary>
            Sweep test using a collider shape and stops at the first hit
            </summary>
            <param name="colliderShape">The collider shape</param>
            <param name="from">The from matris</param>
            <param name="to">The to matris</param>
            <param name="resultsOutput">The results</param>
            <param name="filterMask">The collision category to hit the ray</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.PointTest(WaveEngine.Common.Physics3D.IPhysicBody3D,WaveEngine.Common.Math.Vector3)">
            <summary>
            Test if a point is inside a physic body
            </summary>
            <param name="physicBody">The physic body</param>
            <param name="position">The position to test in world coordinates</param>
            <returns>If this position is inside this body</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.PointTest(WaveEngine.Common.Physics3D.IColliderShape3D,WaveEngine.Common.Math.Vector3)">
            <summary>
            Test if a point is inside a collision shape
            </summary>
            <param name="shape">The collision shape</param>
            <param name="position">The position to test in world coordinates</param>
            <returns>If this position is inside this collision shape</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.ContactTest(WaveEngine.Common.Physics3D.IPhysicBody3D,WaveEngine.Common.Physics3D.ICollisionInfoStore3D)">
            <summary>
            The contact test query perform a collision test against all overlapping objects in the physic world.
            </summary>
            <param name="physicBody">The physic body to detect contact</param>
            <param name="collisionStore">Collision store where the simulation will store the collisions</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.ContactPairTest(WaveEngine.Common.Physics3D.IPhysicBody3D,WaveEngine.Common.Physics3D.IPhysicBody3D,WaveEngine.Common.Physics3D.ICollisionInfoStore3D)">
            <summary>
            The contact test query perform a collision test against all overlapping objects in the physic world.
            </summary>
            <param name="physicBodyA">The first physic body to detect contact</param>
            <param name="physicBodyB">The second physic body to detect contact</param>
            <param name="collisionStore">Collision store where the simulation will store the collisions</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.Step(System.TimeSpan)">
            <summary>
            Take a time step. This performs collision detection, integration, and constraint solution.
            </summary>
            <param name="gameTime">the amount of time to simulate, this should not vary</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.DebugDraw">
            <summary>
            Draw the debug information
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.Dispose">
            <summary>
            Dispose the bullet world
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.SetDebugDraw(WaveEngine.Common.Physics3D.ISimulationDebugDraw3D)">
            <summary>
            Sets the debug draw of Simulation 3D
            </summary>
            <param name="debugDraw">The deubg draw instance</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.ProcessPendingBodies">
            <summary>
            Process pending bodies (remove or initialize)
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSimulation3D.ProcessCollisions">
            <summary>
            Process collisions
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletEmptyCollider3D">
            <summary>
            The BulletEmptyCollider3D implements Bullet rigid body for Wave
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletEmptyCollider3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletEmptyCollider3D" /> class.
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletEmptyCollider3D.GetConvexShape">
            <summary>
            Gets the first convex collider
            </summary>
            <returns>The convex collider</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletEmptyCollider3D.RefreshShapeDimension">
            <summary>
            Refresh the shape dimensions
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletConeCollider3D">
            <summary>
            The BulletConeCollider3D implements Bullet rigid body for Wave
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletConeCollider3D.radius">
            <summary>
            The radius
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletConeCollider3D.height">
            <summary>
            The height
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeCollider3D.Radius">
            <summary>
            Gets or sets the radius of the capsule
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeCollider3D.Height">
            <summary>
            Gets or sets the height of the capsule
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletConeCollider3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletConeCollider3D" /> class.
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletConeCollider3D.RefreshShapeDimension">
            <summary>
            Refresh the shape dimensions
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletCylinderCollider3D">
            <summary>
            The BulletCapsuleCollider3D implements Bullet rigid body for Wave
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletCylinderCollider3D.radius">
            <summary>
            The radius
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletCylinderCollider3D.height">
            <summary>
            The height
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCylinderCollider3D.Radius">
            <summary>
            Gets or sets the radius of the capsule
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCylinderCollider3D.Height">
            <summary>
            Gets or sets the height of the capsule
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCylinderCollider3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletCylinderCollider3D" /> class.
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCylinderCollider3D.RefreshShapeDimension">
            <summary>
            Refresh the shape dimensions
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletCapsuleCollider3D">
            <summary>
            The BulletCapsuleCollider3D implements Bullet rigid body for Wave
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletCapsuleCollider3D.radius">
            <summary>
            The radius
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletCapsuleCollider3D.height">
            <summary>
            The height
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCapsuleCollider3D.Radius">
            <summary>
            Gets or sets the radius of the capsule
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCapsuleCollider3D.Height">
            <summary>
            Gets or sets the height of the capsule
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCapsuleCollider3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletCapsuleCollider3D" /> class.
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCapsuleCollider3D.RefreshShapeDimension">
            <summary>
            Refresh the shape dimensions
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletConvexHullCollider3D">
            <summary>
            The BulletConvexHullCollider3D implements Bullet convex hull collider
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletConvexHullCollider3D.mesh">
            <summary>
            The mesh
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletConvexHullCollider3D.size">
            <summary>
            The size
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletConvexHullCollider3D.localScaling">
            <summary>
            The local scaling
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConvexHullCollider3D.Size">
            <summary>
            Gets or sets the local scaling
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConvexHullCollider3D.LocalScaling">
            <summary>
            Gets or sets the local scaling
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConvexHullCollider3D.DebugDraw">
            <summary>
            Gets a value indicating whether this shape need to be draw
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConvexHullCollider3D.Mesh">
            <summary>
            Gets or sets the mesh of the shape
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConvexHullCollider3D.Convex">
            <summary>
            Gets or sets a value indicating whether we need to create a convex shape from the mesh
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletConvexHullCollider3D.#ctor(WaveEngine.Common.Graphics.Mesh)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletConvexHullCollider3D" /> class.
            </summary>
            <param name="mesh">The mesh</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletConvexHullCollider3D.CreateShape">
            <summary>
            Refresh triangle mesh
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletConvexHullCollider3D.RefreshShapeDimension">
            <summary>
            Refresh the shape dimensions
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletMeshCollider3D">
            <summary>
            The BulletBoxCollider3D implements Bullet rigid body for Wave
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletMeshCollider3D.mesh">
            <summary>
            The mesh
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletMeshCollider3D.triangleMesh">
            <summary>
            Triangle mesh
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletMeshCollider3D.indexBufferGCHandle">
            <summary>
            The index buffer GC Handle
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletMeshCollider3D.size">
            <summary>
            The size
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletMeshCollider3D.scaling">
            <summary>
            The mesh scaling
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletMeshCollider3D.Size">
            <summary>
            Gets or sets the local scaling
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletMeshCollider3D.DebugDraw">
            <summary>
            Gets a value indicating whether this shape need to be draw
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletMeshCollider3D.Mesh">
            <summary>
            Gets or sets the mesh of the shape
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletMeshCollider3D.Convex">
            <summary>
            Gets or sets a value indicating whether we need to create a convex shape from the mesh
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletMeshCollider3D.LocalScaling">
            <summary>
            Gets or sets the mesh scaling
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletMeshCollider3D.InternalShape">
            <summary>
            Gets the associated bullet collision shape
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletMeshCollider3D.#ctor(WaveEngine.Common.Graphics.Mesh)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletMeshCollider3D" /> class.
            </summary>
            <param name="mesh">The mesh</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletMeshCollider3D.Dispose">
            <summary>
            Dispose collider 3D
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletMeshCollider3D.CreateShape">
            <summary>
            Refresh triangle mesh
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletMeshCollider3D.GetConvexShape">
            <summary>
            Gets the first convex collider
            </summary>
            <returns>The convex collider</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletMeshCollider3D.RefreshShapeDimension">
            <summary>
            Refresh the shape dimensions
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletMeshCollider3D.RefreshScaling(WaveEngine.Common.Math.Vector3)">
            <summary>
            Refresh scaling
            </summary>
            <param name="newScale">The new scale</param>
        </member>
        <member name="T:WaveEngine.Bullet.BulletCollider3D`1">
            <summary>
            The BulletCollider3D is a base class for all 3D colliders implemented by Bullet
            </summary>
            <typeparam name="T">The Bullet collision shape type</typeparam>
        </member>
        <member name="F:WaveEngine.Bullet.BulletCollider3D`1.Shape">
            <summary>
            The Box2D shape
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCollider3D`1.LocalScaling">
            <summary>
            Gets or setsthe local scaling
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCollider3D`1.InternalShape">
            <summary>
            Gets the associated bullet collision shape
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCollider3D`1.InternalCollider">
            <summary>
            Gets the internal collider
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCollider3D`1.Dispose">
            <summary>
            Dispose this collider 3D instance
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCollider3D`1.TestPointByInsideMethod(WaveEngine.Common.Math.Vector3@,System.Single)">
            <summary>
            Test if a point is inside of that shape
            </summary>
            <param name="point">The point in world coordinates</param>
            <param name="tolerance">The tolerance factor</param>
            <returns>True if this point is inside the shape</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCollider3D`1.TestPointByRayCast(WaveEngine.Common.Math.Vector3@,System.Single)">
            <summary>
            Test if a point is inside of that shape
            </summary>
            <param name="point">The point in world coordinates</param>
            <param name="tolerance">The tolerance factor</param>
            <returns>True if this point is inside the shape</returns>
        </member>
        <member name="T:WaveEngine.Bullet.BulletCollider3D">
            <summary>
            The BulletCollider3D is a base class for all 3D colliders implemented by Bullet
            </summary>
        </member>
        <member name="E:WaveEngine.Bullet.BulletCollider3D.OnLocalScalingChanged">
            <summary>
            Event fired when the local scaling is changed
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletCollider3D.Body">
            <summary>
            The attached physic body
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletCollider3D.offset">
            <summary>
            The position offset
            </summary>
        </member>
        <member name="E:WaveEngine.Bullet.BulletCollider3D.OnOffsetTransformChanged">
            <summary>
            Event fired when offset transform is changed
            </summary>
        </member>
        <member name="E:WaveEngine.Bullet.BulletCollider3D.OnShapeInstanceChanged">
            <summary>
            The shape instance is changed
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletCollider3D.offsetTransform">
            <summary>
            Offset transform
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCollider3D.LocalScaling">
            <summary>
            Gets or setsthe local scaling
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCollider3D.InternalCollider">
            <summary>
            Gets the internal collider
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCollider3D.InternalShape">
            <summary>
            Gets the associated bullet collision shape
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCollider3D.DebugDraw">
            <summary>
            Gets a value indicating whether this shape need to be draw
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCollider3D.OffsetTransform">
            <summary>
            Gets or sets the center of the collider
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCollider3D.UserData">
            <summary>
            Gets or sets the user data
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletCollider3D.Margin">
            <summary>
            Gets or sets the collision margin of this shape
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCollider3D.Dispose">
            <summary>
            Dispose this collider 3D instance
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCollider3D.GetSubCollider(System.Int32)">
            <summary>
            Refresh the shape dimensions
            </summary>
            <param name="index">The index</param>
            <returns>The subshape</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCollider3D.GetConvexShape">
            <summary>
            Gets the first convex collider
            </summary>
            <returns>The convex collider</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCollider3D.RefreshShapeDimension">
            <summary>
            Refresh the shape dimensions
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCollider3D.FireOnLocalScalingChanged">
            <summary>
            Fire OnLocalScalingChanged event
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCollider3D.FireOnShapeInstanceChanged">
            <summary>
            Fire OnShapeInstanceChanged event
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCollider3D.ColliderOffsetTransformChanged(System.Object,System.EventArgs)">
            <summary>
            Refresh the offset transform of the collider
            </summary>
            <param name="sender">The collider</param>
            <param name="e">The arguments</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCollider3D.RefreshMargin">
            <summary>
            Refresh margin
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletBoxCollider3D">
            <summary>
            The BulletBoxCollider3D implements Bullet rigid body for Wave
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletBoxCollider3D.size">
            <summary>
            The box size
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletBoxCollider3D.Size">
            <summary>
            Gets or sets the size of the box collider
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletBoxCollider3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletBoxCollider3D" /> class.
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletBoxCollider3D.RefreshShapeDimension">
            <summary>
            Refresh the shape dimensions
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletBoxCollider3D.RefreshMargin">
            <summary>
            Refrsh the shape dimension
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletCompoundCollider3D">
            <summary>
            The BulletSphereCollider3D implements Bullet rigid body for Wave
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletCompoundCollider3D.colliders">
            <summary>
            The colliders
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCompoundCollider3D.#ctor(WaveEngine.Bullet.BulletPhysicBody3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletCompoundCollider3D" /> class.
            </summary>
            <param name="body">The physic associated body</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCompoundCollider3D.AddCollider(WaveEngine.Bullet.BulletCollider3D)">
            <summary>
            Add collider
            </summary>
            <param name="collider">The collider</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCompoundCollider3D.RemoveCollider(WaveEngine.Bullet.BulletCollider3D)">
            <summary>
            Remove collider
            </summary>
            <param name="collider">The collider to remove</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCompoundCollider3D.GetColliderShapeByIndex(System.Int32)">
            <summary>
            Gets the collider shape by index
            </summary>
            <param name="index">The index</param>
            <returns>The collider shape</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCompoundCollider3D.GetSubCollider(System.Int32)">
            <summary>
            Refresh the shape dimensions
            </summary>
            <param name="index">The index</param>
            <returns>The subshape</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCompoundCollider3D.GetConvexShape">
            <summary>
            Gets the first convex collider
            </summary>
            <returns>The convex collider</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCompoundCollider3D.GetShapeIndex(WaveEngine.Bullet.BulletCollider3D)">
            <summary>
            The shape index
            </summary>
            <param name="collider">The collider</param>
            <returns>The index</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCompoundCollider3D.Collider_OnOffsetTransformChanged(System.Object,System.EventArgs)">
            <summary>
            A collider has changed its offset transform
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The event args</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCompoundCollider3D.Collider_OnLocalScalingChanged(System.Object,System.EventArgs)">
            <summary>
            A collider has changed its localScaling
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The event args</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletCompoundCollider3D.RefreshShapeDimension">
            <summary>
            Refresh the shape dimensions
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletSphereCollider3D">
            <summary>
            The BulletSphereCollider3D implements Bullet rigid body for Wave
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletSphereCollider3D.radius">
            <summary>
            The radius
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSphereCollider3D.Radius">
            <summary>
            Gets or sets the sphere radius
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSphereCollider3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletSphereCollider3D" /> class.
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSphereCollider3D.RefreshShapeDimension">
            <summary>
            Refresh the shape dimensions
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSphereCollider3D.RefreshMargin">
            <summary>
            Refrsh the shape dimension
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletRaycastResult">
            <summary>
            Raycast result from bullet
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletRaycastResult.Body">
            <summary>
            Collider A
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletRaycastResult.ShapePart">
            <summary>
            The Shape part
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletRaycastResult.TriangleIndex">
            <summary>
            The Triangle index
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletRaycastResult.HitFraction">
            <summary>
            The hit fraction
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletRaycastResult.Point">
            <summary>
            The point
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletRaycastResult.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletRayTestManager">
            <summary>
            Wave raycast callback
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletRayTestManager.simulation">
            <summary>
            The simulation
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRayTestManager.#ctor(WaveEngine.Bullet.BulletSimulation3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletRayTestManager" /> class.
            </summary>
            <param name="simulation">The simulation</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRayTestManager.ClosestRaycast(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Physics3D.CollisionCategory3D,WaveEngine.Common.Physics3D.HitResult3D@)">
            <summary>
            Process the raycast
            </summary>
            <param name="from">The from vector</param>
            <param name="to">The to vector</param>
            <param name="filterMask">The filter mask</param>
            <param name="result">The result</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRayTestManager.AllRaycast(WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Math.Vector3@,WaveEngine.Common.Physics3D.CollisionCategory3D,System.Collections.Generic.IList{WaveEngine.Common.Physics3D.HitResult3D})">
            <summary>
            Process the raycast
            </summary>
            <param name="from">The from vector</param>
            <param name="to">The to vector</param>
            <param name="filterMask">The filter mask</param>
            <param name="resultList">The result</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRayTestManager.ClosestConvexTest(WaveEngine.Bullet.BulletCollider3D,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Physics3D.CollisionCategory3D,WaveEngine.Common.Physics3D.HitResult3D@)">
            <summary>
            Process the raycast
            </summary>
            <param name="castShape">The shape to cast</param>
            <param name="from">The from vector</param>
            <param name="to">The to vector</param>
            <param name="filterMask">The filter mask</param>
            <param name="result">The result</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRayTestManager.AllConvexTest(WaveEngine.Bullet.BulletCollider3D,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Math.Matrix@,WaveEngine.Common.Physics3D.CollisionCategory3D,System.Collections.Generic.IList{WaveEngine.Common.Physics3D.HitResult3D})">
            <summary>
            Process the raycast
            </summary>
            <param name="castShape">The shape to cast</param>
            <param name="from">The from vector</param>
            <param name="to">The to vector</param>
            <param name="filterMask">The filter mask</param>
            <param name="resultList">The result</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletRayTestManager.FillHitResult(WaveEngine.Bullet.BulletRaycastResult*,System.Boolean,WaveEngine.Common.Physics3D.HitResult3D@)">
            <summary>
            Fill hit info struct
            </summary>
            <param name="rayResult">The ray result</param>
            <param name="normalInWorldSpace">The normal in world space</param>
            <param name="result">The hit result</param>
        </member>
        <member name="T:WaveEngine.Bullet.BulletContactPoint3D">
            <summary>
            Contact point between 2 colliders
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletContactPoint3D.BodyA">
            <summary>
            Collider A
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletContactPoint3D.BodyB">
            <summary>
            Collider B
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletContactPoint3D.PartIdA">
            <summary>
            The PartId of A collider
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletContactPoint3D.PartIdB">
            <summary>
            The PartId of B collider
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletContactPoint3D.IndexA">
            <summary>
            The Index of A collider
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletContactPoint3D.IndexB">
            <summary>
            The Index of B collider
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletContactPoint3D.ContactPoint3D">
            <summary>
            The Distance
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletConeTwistJoint3D">
            <summary>
            The BulletConeTwistJoint3D is a base class for all 3D joints implemented by Bullet
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.AFrame">
            <summary>
            Gets the Reference frame on Body A
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.BFrame">
            <summary>
            Gets the Reference frame on Body B
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.SwingSpan1">
            <summary>
            Gets the swing span 1
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.SwingSpan2">
            <summary>
            Gets the swing span 2
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.TwistSpan">
            <summary>
            Gets the twist span
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.AngularOnly">
            <summary>
            Gets or sets a value indicating whether only affects angular movement to the joint
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.Flags">
            <summary>
            Gets the hinge flags
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.FrameOffsetA">
            <summary>
            Gets the frame offset for body A
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.FrameOffsetB">
            <summary>
            Gets the frame offset for body B
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.LimitSoftness">
            <summary>
            Gets the limit softness
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.MaxMotorImpulse">
            <summary>
            Gets or sets and sets maximum motor impulse
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.Damping">
            <summary>
            Gets or sets the damping value
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.FixThresh">
            <summary>
            Gets or sets the fix thresh
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.IsMaxMotorImpulseNormalized">
            <summary>
            Gets a value indicating whether this motor impulse is normalized
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.IsMotorEnabled">
            <summary>
            Gets or sets a value indicating whether this motor is enabled
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.IsPastSwingLimit">
            <summary>
            Gets a value indicating whether the swing limit is past
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.MotorTarget">
            <summary>
            Gets or sets the motor target
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.RelaxationFactor">
            <summary>
            Gets the relaxation factor
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.SolveSwingLimit">
            <summary>
            Gets the swing solve limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.SolveTwistLimit">
            <summary>
            Gets the twist solve limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletConeTwistJoint3D.TwistLimitSign">
            <summary>
            Gets or sets sign of twist limit
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletConeTwistJoint3D.#ctor(WaveEngine.Bullet.BulletSimulation3D,WaveEngine.Common.Physics3D.ConeTwistJointDef3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletConeTwistJoint3D" /> class.
            </summary>
            <param name="simulation">The bullet simulation instance</param>
            <param name="def">The definition</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletConeTwistJoint3D.SetFrames(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)">
            <summary>
            Set frames
            </summary>
            <param name="frameA">The frame A</param>
            <param name="frameB">The frame B</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletConeTwistJoint3D.SetLimit(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set limits
            </summary>
            <param name="swingSpan1">The swing span 1</param>
            <param name="swingSpan2">The swing span 2</param>
            <param name="twistSpan">The twist span</param>
            <param name="softness">How much the hinge rotates for a given force</param>
            <param name="biasFactor">offset for the relaxed rotation of the hinge</param>
            <param name="relaxationFactor">How much force is applied internally to bring the hinge in its central rotation</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletConeTwistJoint3D.SetMotorTargetInConstraintSpace(WaveEngine.Common.Math.Quaternion)">
            <summary>
            Set the motor target in constraint space
            </summary>
            <param name="target">The target orientation</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletConeTwistJoint3D.SetMaxMotorImpulseNormalized(System.Single)">
            <summary>
            Sets the max motor impulse normalized
            </summary>
            <param name="impulse">The impulse</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletConeTwistJoint3D.CreateJoint">
            <summary>
            Instantiate joint
            </summary>
            <returns>The new joint</returns>
        </member>
        <member name="T:WaveEngine.Bullet.BulletGearJoint3D">
            <summary>
            The BulletJoint3D is a base class for all 3D joints implemented by Bullet
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletGearJoint3D.AxisInA">
            <summary>
            Gets or sets the axis in A
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletGearJoint3D.AxisInB">
            <summary>
            Gets or sets the axis in B
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletGearJoint3D.Ratio">
            <summary>
            Gets or sets the A:B gear ratio
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletGearJoint3D.#ctor(WaveEngine.Bullet.BulletSimulation3D,WaveEngine.Common.Physics3D.GearJointDef3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletGearJoint3D" /> class.
            </summary>
            <param name="simulation">The bullet simulation instance</param>
            <param name="def">The definition</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletGearJoint3D.CreateJoint">
            <summary>
            Instantiate joint
            </summary>
            <returns>The new joint</returns>
        </member>
        <member name="T:WaveEngine.Bullet.BulletFixedJoint3D">
            <summary>
            The BulletJoint3D is a base class for all 3D joints implemented by Bullet
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletFixedJoint3D.FrameOffsetA">
            <summary>
            Gets the frame offset for body A
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletFixedJoint3D.FrameOffsetB">
            <summary>
            Gets the frame offset for body B
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletFixedJoint3D.#ctor(WaveEngine.Bullet.BulletSimulation3D,WaveEngine.Common.Physics3D.FixedJointDef3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletFixedJoint3D" /> class.
            </summary>
            <param name="simulation">The bullet simulation instance</param>
            <param name="def">The definition</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletFixedJoint3D.SetFrames(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)">
            <summary>
            Set frames
            </summary>
            <param name="frameA">The frame A</param>
            <param name="frameB">The frame B</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletFixedJoint3D.CreateJoint">
            <summary>
            Instantiate joint
            </summary>
            <returns>The new joint</returns>
        </member>
        <member name="T:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3">
            <summary>
            The BulletJoint3D is a base class for all 3D joints implemented by Bullet
            </summary>
            <typeparam name="T">The bullet constraint type</typeparam>
            <typeparam name="K">The def type</typeparam>
            <typeparam name="J">The joint interface</typeparam>
        </member>
        <member name="P:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.AngularLowerLimit">
            <summary>
            Gets or sets the angular lower limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.AngularUpperLimit">
            <summary>
            Gets or sets the angular upper limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.LinearLowerLimit">
            <summary>
            Gets or sets the linear lower limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.LinearUpperLimit">
            <summary>
            Gets or sets the linear upper limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.FrameOffsetA">
            <summary>
            Gets the frame offset A
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.FrameOffsetB">
            <summary>
            Gets the frame offset B
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.Flags">
            <summary>
            Gets the flags
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.UseFrameOffset">
            <summary>
            Gets or sets a value indicating whether the frame offsets are enabled
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.UseLinearReferenceFrameA">
            <summary>
            Gets or sets a value indicating whether the joint use A as a Frame reference
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.#ctor(WaveEngine.Bullet.BulletSimulation3D,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3" /> class.
            </summary>
            <param name="simulation">The bullet simulation instance</param>
            <param name="def">The definition</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.SetAxis(WaveEngine.Common.Math.Vector3,WaveEngine.Common.Math.Vector3)">
            <summary>
            Set axis
            </summary>
            <param name="axis1">The axis 1</param>
            <param name="axis2">The axis 2</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.SetFrames(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)">
            <summary>
            Set frames
            </summary>
            <param name="frameA">The frame A</param>
            <param name="frameB">The frame B</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.SetLimit(WaveEngine.Common.Physics3D.DOFType,System.Single,System.Single)">
            <summary>
            Sets the axis
            </summary>
            <param name="axis">Axis index 0:X 1:Y 2:Z</param>
            <param name="low">The low limit</param>
            <param name="high">The high limit</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.GetAngle(WaveEngine.Common.Physics3D.DOFType)">
            <summary>
            Gets the angle of the axis
            </summary>
            <param name="axisIndex">Axis index 0:X 1:Y 2:Z</param>
            <returns>The angle</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.GetAxis(WaveEngine.Common.Physics3D.DOFType)">
            <summary>
            Gets the axis
            </summary>
            <param name="axisIndex">Axis index 0:X 1:Y 2:Z</param>
            <returns>The axis</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.IsLimited(WaveEngine.Common.Physics3D.DOFType)">
            <summary>
            Checks if an axis is limited
            </summary>
            <param name="axisIndex">Axis index 0:X 1:Y 2:Z</param>
            <returns>if the axis is limited</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletAbstractGeneric6DofJoint3D`3.CreateJoint">
            <summary>
            Instantiate joint
            </summary>
            <returns>The new joint</returns>
        </member>
        <member name="T:WaveEngine.Bullet.BulletGeneric6DofSpringJoint3D">
            <summary>
            The BulletJoint3D is a base class for all 3D joints implemented by Bullet
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletGeneric6DofSpringJoint3D.#ctor(WaveEngine.Bullet.BulletSimulation3D,WaveEngine.Common.Physics3D.Generic6DofSpringJointDef3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletGeneric6DofSpringJoint3D" /> class.
            </summary>
            <param name="simulation">The bullet simulation instance</param>
            <param name="def">The definition</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletGeneric6DofSpringJoint3D.EnableSpring(WaveEngine.Common.Physics3D.DOFType,System.Boolean)">
            <summary>
            Enable or disable the spring
            </summary>
            <param name="index">DOF index</param>
            <param name="isEnabled">Is enabled or not the spring</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletGeneric6DofSpringJoint3D.SetStiffness(WaveEngine.Common.Physics3D.DOFType,System.Single)">
            <summary>
            Setsa the spring stiffness
            </summary>
            <param name="index">DOF index</param>
            <param name="stiffness">The stiffness</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletGeneric6DofSpringJoint3D.SetDamping(WaveEngine.Common.Physics3D.DOFType,System.Single)">
            <summary>
            Sets the spring damping
            </summary>
            <param name="index">DOF index</param>
            <param name="damping">The damping</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletGeneric6DofSpringJoint3D.SetEquilibriumPoint(WaveEngine.Common.Physics3D.DOFType,System.Single)">
            <summary>
            Sets the spring equilibrium point
            </summary>
            <param name="index">DOF index</param>
            <param name="equilibriumPoint">The equilibriumPoint</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletGeneric6DofSpringJoint3D.CreateJoint">
            <summary>
            Instantiate joint
            </summary>
            <returns>The new joint</returns>
        </member>
        <member name="T:WaveEngine.Bullet.BulletGeneric6DofJoint3D">
            <summary>
            The BulletJoint3D is a base class for all 3D joints implemented by Bullet
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletGeneric6DofJoint3D.#ctor(WaveEngine.Bullet.BulletSimulation3D,WaveEngine.Common.Physics3D.Generic6DofJointDef3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletGeneric6DofJoint3D" /> class.
            </summary>
            <param name="simulation">The bullet simulation instance</param>
            <param name="def">The definition</param>
        </member>
        <member name="T:WaveEngine.Bullet.BulletSliderJoint3D">
            <summary>
            The BulletJoint3D is a base class for all 3D joints implemented by Bullet
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.UseAngularLimit">
            <summary>
            Gets a value indicating whether Use angular limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.LowerAngularLimit">
            <summary>
            Gets or sets the Lower angular limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.UpperAngularLimit">
            <summary>
            Gets or sets the Upper angular limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.UseLinearLimit">
            <summary>
            Gets a value indicating whether Use angular limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.LowerLinearLimit">
            <summary>
            Gets or sets the Lower linear limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.UpperLinearLimit">
            <summary>
            Gets or sets the Upper linear limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.EnableLinearMotor">
            <summary>
            Gets or sets a value indicating whether the motor is enabled
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.MaxLinearMotorForce">
            <summary>
            Gets or sets and sets maximum motor impulse
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.TargetLinearMotorVelocity">
            <summary>
            Gets or sets the max motor target velocity
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.EnableAngularMotor">
            <summary>
            Gets or sets a value indicating whether the motor is enabled
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.MaxAngularMotorForce">
            <summary>
            Gets or sets and sets maximum motor impulse
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.TargetAngularMotorVelocity">
            <summary>
            Gets or sets the max motor target velocity
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.AncorInA">
            <summary>
            Gets the ancor in A
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.AncorInB">
            <summary>
            Gets the ancor in B
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.AngularDepth">
            <summary>
            Gets the angular depth
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.AngularPosition">
            <summary>
            Gets the angular position
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.LinearDepth">
            <summary>
            Gets the linear depth
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.LinearPosition">
            <summary>
            Gets the linear position
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.CalculatedTransformA">
            <summary>
            Gets the calculated transform in A
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.CalculatedTransformB">
            <summary>
            Gets the calculated transform in B
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.EnableFrameOffset">
            <summary>
            Gets or sets a value indicating whether this joint use frame offsets
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.FrameOffsetA">
            <summary>
            Gets the frame offset in A
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.FrameOffsetB">
            <summary>
            Gets the frame offset in B
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.DampingDirAngular">
            <summary>
            Gets or sets the damping direction angular
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.DampingDirLinear">
            <summary>
            Gets or sets the linear damping dir
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.DampingLimAngular">
            <summary>
             Gets or sets the angular damping lim
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.DampingLimLinear">
            <summary>
             Gets or sets the linear damping lim
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.DampingOrthoAngular">
            <summary>
             Gets or sets the angular damping ortho
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.DampingOrthoLinear">
            <summary>
            Gets or sets the linear damping ortho
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.RestitutionDirAngular">
            <summary>
             Gets or sets the Restitution direction angular
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.RestitutionDirLinear">
            <summary>
             Gets or sets the linear Restitution dir
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.RestitutionLimAngular">
            <summary>
             Gets or sets the angular Restitution lim
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.RestitutionLimLinear">
            <summary>
             Gets or sets the linear Restitution lim
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.RestitutionOrthoAngular">
            <summary>
             Gets or sets the angular Restitution ortho
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.RestitutionOrthoLinear">
            <summary>
             Gets or sets the linear Restitution ortho
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.SoftnessDirAngular">
            <summary>
             Gets or sets the Softness direction angular
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.SoftnessDirLinear">
            <summary>
             Gets or sets the linear Softness dir
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.SoftnessLimAngular">
            <summary>
             Gets or sets the angular Softness lim
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.SoftnessLimLinear">
            <summary>
             Gets or sets the linear Softness lim
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.SoftnessOrthoAngular">
            <summary>
             Gets or sets the angular Softness ortho
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletSliderJoint3D.SoftnessOrthoLinear">
            <summary>
             Gets or sets the linear Softness ortho
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSliderJoint3D.#ctor(WaveEngine.Bullet.BulletSimulation3D,WaveEngine.Common.Physics3D.SliderJointDef3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletSliderJoint3D" /> class.
            </summary>
            <param name="simulation">The bullet simulation instance</param>
            <param name="def">The definition</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSliderJoint3D.SetFrames(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)">
            <summary>
            Set frames
            </summary>
            <param name="frameA">The frame A</param>
            <param name="frameB">The frame B</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSliderJoint3D.CalculateTransforms(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)">
            <summary>
            Calculate the trasnform
            </summary>
            <param name="transA">Transform for A</param>
            <param name="transB">Transform for B</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletSliderJoint3D.CreateJoint">
            <summary>
            Instantiate joint
            </summary>
            <returns>The new joint</returns>
        </member>
        <member name="T:WaveEngine.Bullet.BulletJointFeedback3D">
            <summary>
            The BulletJointFeedback3D is a base class for all 3D joints feedback implemented by Bullet
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletJointFeedback3D.joint">
            <summary>
            The joint
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJointFeedback3D.AppliedForceBodyA">
            <summary>
            Gets the Applied force to body A
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJointFeedback3D.AppliedTorqueBodyA">
            <summary>
            Gets the Applied torque to body A
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJointFeedback3D.AppliedForceBodyB">
            <summary>
            Gets the Applied force to body B
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJointFeedback3D.AppliedTorqueBodyB">
            <summary>
            Gets the Applied torque to body B
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletJointFeedback3D.#ctor(WaveEngine.Bullet.BulletJoint3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletJointFeedback3D" /> class.
            </summary>
            <param name="joint">The joint</param>
        </member>
        <member name="T:WaveEngine.Bullet.BulletHingeJoint3D">
            <summary>
            The BulletJoint3D is a base class for all 3D joints implemented by Bullet
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.AFrame">
            <summary>
            Gets the Reference frame on Body A
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.BFrame">
            <summary>
            Gets the Reference frame on Body B
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.AngularOnly">
            <summary>
            Gets or sets a value indicating whether only affects angular movement to the joint
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.EnableMotor">
            <summary>
            Gets or sets a value indicating whether the motor is enabled
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.Flags">
            <summary>
            Gets the hinge flags
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.FrameOffsetA">
            <summary>
            Gets the frame offset for body A
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.FrameOffsetB">
            <summary>
            Gets the frame offset for body B
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.HasLimit">
            <summary>
            Gets a value indicating whether this joint has limits
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.HingeAngle">
            <summary>
            Gets the angle of the joint
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.LimitBiasFactor">
            <summary>
            Gets the Limit bias factor
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.LimitRelaxationFactor">
            <summary>
            Gets the limit relaxation factor
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.LimitSign">
            <summary>
            Gets the limit sign
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.LimitSoftness">
            <summary>
            Gets the limit softness
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.LowerLimit">
            <summary>
            Gets the lower limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.MaxMotorImpulse">
            <summary>
            Gets or sets and sets maximum motor impulse
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.MotorTargetVelocity">
            <summary>
            Gets the max motor target velocity
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.SolveLimit">
            <summary>
            Gets the solve limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.UpperLimit">
            <summary>
            Gets the upper limit
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.UseFrameOffset">
            <summary>
            Gets or sets a value indicating whether the frame offsets are enabled
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletHingeJoint3D.UseReferenceFrameA">
            <summary>
            Gets or sets a value indicating whether the joint use A as a Frame reference
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletHingeJoint3D.#ctor(WaveEngine.Bullet.BulletSimulation3D,WaveEngine.Common.Physics3D.HingeJointDef3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletHingeJoint3D" /> class.
            </summary>
            <param name="simulation">The bullet simulation instance</param>
            <param name="def">The definition</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletHingeJoint3D.SetAxis(WaveEngine.Common.Math.Vector3)">
            <summary>
            Set axis
            </summary>
            <param name="axis">The axis</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletHingeJoint3D.SetFrames(WaveEngine.Common.Math.Matrix,WaveEngine.Common.Math.Matrix)">
            <summary>
            Set frames
            </summary>
            <param name="frameA">The frame A</param>
            <param name="frameB">The frame B</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletHingeJoint3D.SetLimit(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set limits
            </summary>
            <param name="low">The low limit</param>
            <param name="high">The high limit</param>
            <param name="softness">How much the hinge rotates for a given force</param>
            <param name="biasFactor">offset for the relaxed rotation of the hinge</param>
            <param name="relaxationFactor">How much force is applied internally to bring the hinge in its central rotation</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletHingeJoint3D.SetMotorTarget(System.Single,System.Single)">
            <summary>
            Set motor target
            </summary>
            <param name="targetAngle">The target angle</param>
            <param name="deltaTime">The delta time</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletHingeJoint3D.SetMotorTarget(WaveEngine.Common.Math.Quaternion,System.Single)">
            <summary>
            Set motor target
            </summary>
            <param name="qAinB">Quaternion of A in B</param>
            <param name="deltaTime">The delta time</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletHingeJoint3D.EnableAngularMotor(System.Boolean,System.Single,System.Single)">
            <summary>
            Enable angular motor
            </summary>
            <param name="motorEnabled">Motor enabled</param>
            <param name="targetVelocity">Target velocity</param>
            <param name="maxMotorImpulse">Max motor impulse</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletHingeJoint3D.CreateJoint">
            <summary>
            Instantiate joint
            </summary>
            <returns>The new joint</returns>
        </member>
        <member name="T:WaveEngine.Bullet.BulletPointToPointJoint3D">
            <summary>
            The BulletJoint3D is a base class for all 3D joints implemented by Bullet
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPointToPointJoint3D.LocalAnchorA">
            <summary>
            Gets or sets the local anchor point relative to bodyA's origin.
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletPointToPointJoint3D.LocalAnchorB">
            <summary>
            Gets or sets the local anchor point relative to bodyB's origin.
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPointToPointJoint3D.#ctor(WaveEngine.Bullet.BulletSimulation3D,WaveEngine.Common.Physics3D.PointToPointJointDef3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletPointToPointJoint3D" /> class.
            </summary>
            <param name="simulation">The bullet simulation instance</param>
            <param name="def">The definition</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletPointToPointJoint3D.CreateJoint">
            <summary>
            Instantiate joint
            </summary>
            <returns>The new joint</returns>
        </member>
        <member name="T:WaveEngine.Bullet.BulletJoint3D`2">
            <summary>
            The BulletJoint3D is a base class for all 3D joints implemented by Bullet
            </summary>
            <typeparam name="T">The Bullet joint type</typeparam>
            <typeparam name="K">The interface joint definition type</typeparam>
        </member>
        <member name="F:WaveEngine.Bullet.BulletJoint3D`2.joint">
            <summary>
            The Bullet joint
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletJoint3D`2.def">
            <summary>
            The interface joint definition
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D`2.BreakingImpulseThreshold">
            <summary>
            Gets or sets the amount offorce that a joint can take before break.
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D`2.Joint">
            <summary>
            Gets the Bullet internal joint
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D`2.InternalJoint">
            <summary>
            Gets the Box2D internal joint
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletJoint3D`2.#ctor(WaveEngine.Bullet.BulletSimulation3D,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletJoint3D`2" /> class.
            </summary>
            <param name="simulation">The bullet simulation instance</param>
            <param name="def">The joint definition</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletJoint3D`2.CreateJoint">
            <summary>
            Instantiate joint
            </summary>
            <returns>The new joint</returns>
        </member>
        <member name="M:WaveEngine.Bullet.BulletJoint3D`2.DestroyJoint">
            <summary>
            Destroy joint
            </summary>
        </member>
        <member name="T:WaveEngine.Bullet.BulletJoint3D">
            <summary>
            The BulletJoint3D is a base class for all 3D joints implemented by Bullet
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletJoint3D.simulation">
            <summary>
            The simulation object
            </summary>
        </member>
        <member name="E:WaveEngine.Bullet.BulletJoint3D.OnBroke">
            <summary>
            Event fired when the joint is broken
            </summary>
        </member>
        <member name="F:WaveEngine.Bullet.BulletJoint3D.jointFeedback">
            <summary>
            Joint feedback implementation
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D.Joint">
            <summary>
            Gets the Bullet internal joint
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D.InternalJoint">
            <summary>
            Gets the Bullet internal joint
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D.BodyA">
            <summary>
            Gets the first body attached to this joint
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D.BodyB">
            <summary>
            Gets the second body attached to this joint
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D.AppliedImpulse">
            <summary>
            Gets the applied impulse
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D.DebugDrawSize">
            <summary>
            Gets or sets the debug draw size of the joint
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D.NeedsFeedback">
            <summary>
            Gets or sets a value indicating whether the application needs to obtain feedback
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D.JointFeedback">
            <summary>
            Gets the Joint feedback
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D.OverrideNumSolverIterations">
            <summary>
            Gets or sets the Override the number of solver iterations
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this joint is active
            </summary>
        </member>
        <member name="P:WaveEngine.Bullet.BulletJoint3D.BreakingImpulseThreshold">
            <summary>
            Gets or sets the amount offorce that a joint can take before break.
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletJoint3D.#ctor(WaveEngine.Bullet.BulletSimulation3D)">
            <summary>
            Initializes a new instance of the <see cref="T:WaveEngine.Bullet.BulletJoint3D" /> class.
            </summary>
            <param name="simulation">The bullet simulation instance</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletJoint3D.Dispose">
            <summary>
            Dispose this collider 3D instance
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletJoint3D.FireOnBroke(System.Single)">
            <summary>
            Event fired when the joint is broken
            </summary>
            <param name="jointError">The joint error</param>
        </member>
        <member name="M:WaveEngine.Bullet.BulletJoint3D.CheckJointIntegrity">
            <summary>
            Checks the joint integrity
            </summary>
        </member>
        <member name="M:WaveEngine.Bullet.BulletJoint3D.DestroyJoint">
            <summary>
            Destroy joint
            </summary>
        </member>
    </members>
</doc>
